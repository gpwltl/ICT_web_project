{"ast":null,"code":"var _jsxFileName = \"/Users/hyeji/ICT_web_project/gcloud_fe/src/components/games/Lotto/Lotto.js\";\nimport React, { Component, useState, useEffect, useRef, useMemo, useCallback } from \"react\";\nimport Ball from \"./Ball\";\n\nfunction getWinNumbers() {\n  const candidate = Array(45).fill().map((_, i) => i + 1);\n  const shuffle = [];\n\n  while (candidate.length > 0) {\n    shuffle.push(candidate.splice(Math.floor(Math.random() * candidate.length), 1)[0]);\n  }\n\n  const bonusNumber = shuffle[shuffle.length - 1];\n  const winNumbers = shuffle.slice(0, 6).sort((p, c) => p - c);\n  let result = [...winNumbers, bonusNumber];\n  console.log(\"getWinNumbers: \", result);\n  return result;\n}\n\nconst Lotto = () => {\n  const lottoNumbers = useMemo(() => getWinNumbers(), []);\n  const [winNumbers, setWinNumbers] = useState(lottoNumbers);\n  const [winBalls, setWinBalls] = useState([]);\n  const [bonus, setBonus] = useState(null);\n  const [redo, setRedo] = useState(false);\n  const timeouts = useRef([]);\n  useEffect(() => {\n    console.log(\"useEffect\");\n\n    for (let i = 0; i < winNumbers.length - 1; i++) {\n      timeouts.current[i] = setTimeout(() => {\n        setWinBalls(prevWinBalls => [...prevWinBalls, winNumbers[i]]);\n      }, (i + 1) * 1000);\n    }\n\n    timeouts.current[6] = setTimeout(() => {\n      setBonus(winNumbers[6]);\n      setRedo(true);\n    }, 7000);\n    return () => {\n      console.log(\"componentWillUnmount\");\n      timeouts.current.forEach(v => {\n        clearTimeout(v);\n      });\n    };\n  }, [timeouts.current]); // componentDidMount와 componentDidUpdate 둘다 실행\n  // componentDidUpdate에서만 하고싶다면?\n\n  const mounted = useRef(false);\n  useEffect(() => {\n    if (!mounted.current) {\n      mounted.current = true; // 아무것도 안하고, mounted 값만 바꿔줌\n    } else {// 여기만 실행되므로 componentDidUpdate와 비슷한 효과\n      }\n  }, [redo]);\n  useEffect(() => {\n    console.log(\"로또 숫자를 생성합니다.\");\n  }, [winNumbers]);\n  const onClickRedo = useCallback(() => {\n    console.log(\"onClickRedo: \", winNumbers);\n    setWinNumbers(getWinNumbers());\n    setWinBalls([]);\n    setBonus(null);\n    setRedo(false);\n    timeouts.current = [];\n  }, [winNumbers]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"\\uB2F9\\uCCA8 \\uC22B\\uC790\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"\\uACB0\\uACFC\\uCC3D\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, winBalls.map(v => /*#__PURE__*/React.createElement(Ball, {\n    key: v,\n    number: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"\\uBCF4\\uB108\\uC2A4!\"), bonus && /*#__PURE__*/React.createElement(Ball, {\n    number: bonus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }), redo && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClickRedo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 16\n    }\n  }, \"\\uD55C \\uBC88 \\uB354!\"));\n};\n\nexport default Lotto;","map":{"version":3,"sources":["/Users/hyeji/ICT_web_project/gcloud_fe/src/components/games/Lotto/Lotto.js"],"names":["React","Component","useState","useEffect","useRef","useMemo","useCallback","Ball","getWinNumbers","candidate","Array","fill","map","_","i","shuffle","length","push","splice","Math","floor","random","bonusNumber","winNumbers","slice","sort","p","c","result","console","log","Lotto","lottoNumbers","setWinNumbers","winBalls","setWinBalls","bonus","setBonus","redo","setRedo","timeouts","current","setTimeout","prevWinBalls","forEach","v","clearTimeout","mounted","onClickRedo"],"mappings":"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","sourcesContent":["import React, {\n  Component,\n  useState,\n  useEffect,\n  useRef,\n  useMemo,\n  useCallback,\n} from \"react\";\nimport Ball from \"./Ball\";\n\nfunction getWinNumbers() {\n  const candidate = Array(45)\n    .fill()\n    .map((_, i) => i + 1);\n  const shuffle = [];\n  while (candidate.length > 0) {\n    shuffle.push(\n      candidate.splice(Math.floor(Math.random() * candidate.length), 1)[0]\n    );\n  }\n  const bonusNumber = shuffle[shuffle.length - 1];\n  const winNumbers = shuffle.slice(0, 6).sort((p, c) => p - c);\n  let result = [...winNumbers, bonusNumber];\n  console.log(\"getWinNumbers: \", result);\n  return result;\n}\n\nconst Lotto = () => {\n  const lottoNumbers = useMemo(() => getWinNumbers(), []);\n  const [winNumbers, setWinNumbers] = useState(lottoNumbers);\n  const [winBalls, setWinBalls] = useState([]);\n  const [bonus, setBonus] = useState(null);\n  const [redo, setRedo] = useState(false);\n  const timeouts = useRef([]);\n\n  useEffect(() => {\n    console.log(\"useEffect\");\n    for (let i = 0; i < winNumbers.length - 1; i++) {\n      timeouts.current[i] = setTimeout(() => {\n        setWinBalls((prevWinBalls) => [...prevWinBalls, winNumbers[i]]);\n      }, (i + 1) * 1000);\n    }\n    timeouts.current[6] = setTimeout(() => {\n      setBonus(winNumbers[6]);\n      setRedo(true);\n    }, 7000);\n    return () => {\n      console.log(\"componentWillUnmount\");\n      timeouts.current.forEach((v) => {\n        clearTimeout(v);\n      });\n    };\n  }, [timeouts.current]); // componentDidMount와 componentDidUpdate 둘다 실행\n\n  // componentDidUpdate에서만 하고싶다면?\n\n  const mounted = useRef(false);\n  useEffect(() => {\n    if (!mounted.current) {\n      mounted.current = true;\n      // 아무것도 안하고, mounted 값만 바꿔줌\n    } else {\n      // 여기만 실행되므로 componentDidUpdate와 비슷한 효과\n    }\n  }, [redo]);\n\n  useEffect(() => {\n    console.log(\"로또 숫자를 생성합니다.\");\n  }, [winNumbers]);\n\n  const onClickRedo = useCallback(() => {\n    console.log(\"onClickRedo: \", winNumbers);\n    setWinNumbers(getWinNumbers());\n    setWinBalls([]);\n    setBonus(null);\n    setRedo(false);\n\n    timeouts.current = [];\n  }, [winNumbers]);\n\n  return (\n    <>\n      <div>당첨 숫자</div>\n      <div id=\"결과창\">\n        {winBalls.map((v) => (\n          <Ball key={v} number={v} />\n        ))}\n      </div>\n      <div>보너스!</div>\n      {bonus && <Ball number={bonus} />}\n      {redo && <button onClick={onClickRedo}>한 번 더!</button>}\n    </>\n  );\n};\nexport default Lotto;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/hyeji/ICT_web_project/gcloud_fe/src/games/NumberBaseball/NumberBaseball.js\";\nimport React, { Component } from \"react\";\nimport Try from \"./Try\";\n\nfunction getNumbers() {\n  //숫자 4개를 겹치지 않고 랜덤하게 뽑는 함수\n  const candidate = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  const array = [];\n\n  for (let i = 0; i < 4; i += 1) {\n    const chosen = candidate.splice(Math.floor(Math.random() * (9 - i)), 1)[0];\n    array.push(chosen);\n  }\n\n  return array;\n}\n\nclass NumberBaseball extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      result: \"\",\n      value: \"\",\n      answer: getNumbers(),\n      tries: []\n    };\n\n    this.onSubmitForm = e => {\n      const {\n        result,\n        value,\n        tries,\n        answer\n      } = this.state;\n      e.preventDefault();\n\n      if (value === answer.join(\"\")) {\n        //답이 맞는 지 비교\n        this.setState(prevState => {\n          return {\n            result: \"홈런!\",\n            tries: [...prevState.tries, {\n              try: value,\n              result: \"홈런!\"\n            }]\n          };\n        });\n        alert(\"게임을 다시 시작합니다!\");\n        this.setState({\n          value: \"\",\n          answer: getNumbers(),\n          tries: []\n        });\n      } else {\n        // 답 틀렸으면\n        const answerArray = value.split(\"\").map(v => parseInt(v));\n        let strike = 0;\n        let ball = 0;\n\n        if (tries.length >= 9) {\n          // 10번 이상 틀렸을 때\n          this.setState({\n            result: `10번 넘게 틀려서 실패! 답은 ${answer.join(\",\")}였습니다!`\n          });\n          alert(\"게임을 다시 시작합니다!\");\n          this.setState({\n            value: \"\",\n            answer: getNumbers(),\n            tries: []\n          });\n        } else {\n          for (let i = 0; i < 4; i += 1) {\n            if (answerArray[i] === answer[i]) {\n              strike += 1;\n            } else if (answer.includes(answerArray[i])) {\n              ball += 1;\n            }\n          }\n\n          this.setState(prevState => {\n            return {\n              tries: [...prevState.tries, {\n                try: value,\n                result: `${strike} 스트라이크, ${ball} 볼입니다`\n              }],\n              value: \"\"\n            };\n          });\n        }\n      }\n    };\n\n    this.onChangeInput = e => {\n      console.log(this.state.answer);\n      this.setState({\n        value: e.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      result,\n      value,\n      tries\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, result), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      maxLength: 4,\n      value: value,\n      onChange: this.onChangeInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, \"\\uC2DC\\uB3C4: \", tries.length), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, tries.map((v, i) => {\n      return /*#__PURE__*/React.createElement(Try, {\n        key: `${i + 1}차 시도: `,\n        tryInfo: v,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 20\n        }\n      });\n    })));\n  }\n\n}\n\nexport default NumberBaseball;","map":{"version":3,"sources":["/Users/hyeji/ICT_web_project/gcloud_fe/src/games/NumberBaseball/NumberBaseball.js"],"names":["React","Component","Try","getNumbers","candidate","array","i","chosen","splice","Math","floor","random","push","NumberBaseball","state","result","value","answer","tries","onSubmitForm","e","preventDefault","join","setState","prevState","try","alert","answerArray","split","map","v","parseInt","strike","ball","length","includes","onChangeInput","console","log","target","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Try from \"./Try\";\n\nfunction getNumbers() {\n  //숫자 4개를 겹치지 않고 랜덤하게 뽑는 함수\n  const candidate = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  const array = [];\n  for (let i = 0; i < 4; i += 1) {\n    const chosen = candidate.splice(Math.floor(Math.random() * (9 - i)), 1)[0];\n    array.push(chosen);\n  }\n  return array;\n}\n\nclass NumberBaseball extends Component {\n  state = {\n    result: \"\",\n    value: \"\",\n    answer: getNumbers(),\n    tries: [],\n  };\n\n  onSubmitForm = (e) => {\n    const { result, value, tries, answer } = this.state;\n    e.preventDefault();\n    if (value === answer.join(\"\")) {\n      //답이 맞는 지 비교\n      this.setState((prevState) => {\n        return {\n          result: \"홈런!\",\n          tries: [...prevState.tries, { try: value, result: \"홈런!\" }],\n        };\n      });\n      alert(\"게임을 다시 시작합니다!\");\n      this.setState({\n        value: \"\",\n        answer: getNumbers(),\n        tries: [],\n      });\n    } else {\n      // 답 틀렸으면\n      const answerArray = value.split(\"\").map((v) => parseInt(v));\n      let strike = 0;\n      let ball = 0;\n      if (tries.length >= 9) {\n        // 10번 이상 틀렸을 때\n        this.setState({\n          result: `10번 넘게 틀려서 실패! 답은 ${answer.join(\",\")}였습니다!`,\n        });\n        alert(\"게임을 다시 시작합니다!\");\n        this.setState({\n          value: \"\",\n          answer: getNumbers(),\n          tries: [],\n        });\n      } else {\n        for (let i = 0; i < 4; i += 1) {\n          if (answerArray[i] === answer[i]) {\n            strike += 1;\n          } else if (answer.includes(answerArray[i])) {\n            ball += 1;\n          }\n        }\n        this.setState((prevState) => {\n          return {\n            tries: [\n              ...prevState.tries,\n              { try: value, result: `${strike} 스트라이크, ${ball} 볼입니다` },\n            ],\n            value: \"\",\n          };\n        });\n      }\n    }\n  };\n\n  onChangeInput = (e) => {\n    console.log(this.state.answer);\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  render() {\n    const { result, value, tries } = this.state;\n    return (\n      <>\n        <h1>{result}</h1>\n        <form onSubmit={this.onSubmitForm}>\n          <input maxLength={4} value={value} onChange={this.onChangeInput} />\n        </form>\n        <div>시도: {tries.length}</div>\n        <ul>\n          {tries.map((v, i) => {\n            return <Try key={`${i + 1}차 시도: `} tryInfo={v} />;\n          })}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default NumberBaseball;\n"]},"metadata":{},"sourceType":"module"}